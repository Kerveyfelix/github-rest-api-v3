{"version":3,"sources":["services/GitHub.js","components/visualization.js","components/main.js","components/header.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["PER_PAGE","API_URL","endpoints","getEndpoint","username","endpoint","a","pageNumber","perPage","url","axios","get","resp","data","length","getDetails","getAll","endpointPages","results","resultArray","ep","push","Promise","all","map","arr","newData","res","api","Visualization","props","className","JSON","stringify","Main","useState","setUsername","info","setInfo","Form","onSubmit","e","preventDefault","then","console","log","catch","err","FormGroup","row","Label","for","xs","md","Col","InputGroup","InputGroupAddon","addonType","Button","Input","type","required","value","onChange","target","block","color","Header","Navbar","dark","NavbarBrand","href","Footer","Row","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ad8d950.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/**\r\n * 3 pages comprise ~300 records. Retrieving such a\r\n * huge number for each endpoint would not be feasible by\r\n * the application and may lead to exceeding the API's rate\r\n * limit. This may be overridden by passing true to\r\n * the getAll argument in the getDetails function. */\r\nconst TOO_MANY_PAGES = 3;\r\nconst PER_PAGE = 100;\r\nconst API_URL = 'https://api.github.com';\r\n\r\n// All endpoints\r\nconst endpoints = [\r\n\t'repos',\r\n\t'gists',\r\n\t'followers',\r\n\t'following',\r\n\t'starred'\r\n];\r\n\r\n// Get a page from a particular endpoint\r\nconst getEndpoint = async (username, endpoint, pageNumber = 1, perPage = PER_PAGE) => {\r\n\t// URL for the API endpoint\r\n\tconst url = `${API_URL}/users/${username}/${endpoint}?per_page=${perPage}&page=${pageNumber}`;\r\n\tconst resp = await axios.get(url);\r\n\treturn resp.data.length > 0 ? resp.data : null;\r\n};\r\n\r\n// Get the data object for a user\r\nconst getDetails = async (username, getAll = false) => {\r\n\t/**\r\n\t * The API returns atmost 30 entries by default unless the\r\n\t * 'per_page' GET parameter is specified, which can be a\r\n\t * 100 at maximum. Multiple calls for each page are required\r\n\t * to fetch all entries. */\r\n\r\n\t// Initiate each call from page 1\r\n\tlet endpointPages = {};\r\n\tlet results = { username },\r\n\t\tresultArray = [];\r\n\tfor (let ep of endpoints) {\r\n\t\tendpointPages[ep] = 1;\r\n\t\tresults[ep] = [];\r\n\t\tresultArray.push([ep, []]);\r\n\t}\r\n\r\n\t// Build data array\r\n\tresultArray = await Promise.all(resultArray.map(async ([ep, arr]) => {\r\n\t\tlet newData;\r\n\t\twhile (true) {\r\n\t\t\tnewData = await getEndpoint(username, ep, endpointPages[ep]);\r\n\t\t\t//console.log(ep, newData);\r\n\t\t\tif (newData !== null) {\r\n\t\t\t\tarr = [\r\n\t\t\t\t\t...arr,\r\n\t\t\t\t\t...newData\r\n\t\t\t\t];\r\n\t\t\t} else\r\n\t\t\t\tbreak;\r\n\t\t\tif ((endpointPages[ep] === TOO_MANY_PAGES && !getAll) || newData.length < PER_PAGE)\r\n\t\t\t\tbreak;\r\n\t\t\tendpointPages[ep]++;\r\n\t\t}\r\n\t\t\r\n\t\treturn [ep, arr];\r\n\t}));\r\n\r\n\t// Convert to object\r\n\tfor (let [ep, arr] of resultArray) {\r\n\t\tif (arr.length > 0)\r\n\t\t\tresults[ep] = arr;\r\n\t\telse\r\n\t\t\tresults[ep] = null;\r\n\t}\r\n\r\n\treturn new Promise(async (res) => res(await results));\r\n};\r\n\r\n// Exported object\r\nconst api = {\r\n\tendpoints,\r\n\tgetEndpoint,\r\n\tgetDetails\r\n};\r\n\r\nexport default api;","const Visualization = (props) => {\r\n\r\n\treturn <pre className='text-left'>{JSON.stringify(props.data, null, '    ')}</pre>; // TODO\r\n}\r\n\r\nexport default Visualization;","import { useState } from 'react';\r\nimport { Input, Form, FormGroup, Label,\r\n\tCol, \r\n\tButton,\r\n\tInputGroup,\r\n\tInputGroupAddon} from 'reactstrap';\r\nimport api from '../services/GitHub';\r\nimport Visualization from './visualization';\r\nimport './main.css';\r\n\r\nconst Main = () => {\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [info, setInfo] = useState(null);\r\n\r\n\tconst updateUsername = (e) => setUsername(e.target.value);\r\n\r\n\tconst sendUsername = (e) => {\r\n\t\te.preventDefault();\r\n\t\tapi.getDetails(username)\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetInfo(data);\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.then(data => console.log(data))\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='w-100'>\r\n\t\t\t<main className=\"Main border container-fluid bg-light p-md-5 pt-3 align-items-center\">\r\n\t\t\t\t<Form onSubmit={sendUsername}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label for='username' className='offset-md-1' xs={12} md={1}>\r\n\t\t\t\t\t\t\t<span className='float-left float-md-right'>Username: </span>\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t<Col xs={12} md={8} className='mb-2 mb-md-0'>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType='prepend'>\r\n\t\t\t\t\t\t\t\t\t<Button className='bg-light text-dark font-weight-bold border'>@</Button>\r\n\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t\t<Input type='text' required\r\n\t\t\t\t\t\t\t\t\tvalue={username} onChange={updateUsername}/>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={12} md={2} className='mb-1 mb-md-0' >\r\n\t\t\t\t\t\t\t<Button block type='submit' color='primary'>Submit</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<Visualization data={info}/>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Main;","import { Navbar, NavbarBrand } from 'reactstrap';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header >\r\n\t\t\t<Navbar color='primary' dark>\r\n\t\t\t\t<NavbarBrand href='./'>GitHub API Playground</NavbarBrand>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;","import { Row, Col } from \"reactstrap\";\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className='align-items-center bg-primary'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Row className='p-4 text-white'>\r\n\t\t\t\t\t<Col className='offset-md-2' md={8}>\r\n\t\t\t\t\t\tÂ© <a href='https://adityabisoi.github.io/' rel=\"noreferrer\" target='_blank'>Aditya Bisoi</a>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import './App.css';\nimport Main from './components/main';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nconst App = () => {\n  return(\n    <div className=\"App\">\n      <Header/>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'typeface-roboto-condensed';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}